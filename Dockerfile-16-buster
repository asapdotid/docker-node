FROM node:16-buster-slim

# Metadata params
ARG BUILD_DATE
ARG VCS_REF
ARG TIMEZONE=Asia/Jakarta
ARG DEBIAN_FRONTEND="noninteractive"
ARG DEBCONF_NOWARNINGS="yes"
ARG DEBCONF_TERSE="yes"
ARG APT="apt-get -qq -y"
ARG LANG="C.UTF-8"
ENV LIBVIPS_VERSION=8.10.1
ENV NODE_ENV=production

# Metadata
LABEL maintainer="Asapdotid <asapdotid@gmail.com>" \
      org.label-schema.url="https://gitlab.com/asap-labs/docker-node/-/blob/main/README.md" \
      org.label-schema.build-date=${BUILD_DATE} \
      org.label-schema.version=16-buster \
      org.label-schema.vcs-url="https://gitlab.com/asap-labs/docker-node.git" \
      org.label-schema.vcs-ref=${VCS_REF} \
      org.label-schema.docker.dockerfile="/Dockerfile-16-buster" \
      org.label-schema.description="NodeJS on 16 LTS Buster SLim docker image" \
      org.label-schema.schema-version="1.0"

# Configure APT
RUN set -x \
      && echo "debconf debconf/frontend select ${DEBIAN_FRONTEND}" | debconf-set-selections \
      && echo 'APT::Install-Recommends "false";' | tee /etc/apt/apt.conf.d/99install-recommends \
      && echo 'APT::Get::Assume-Yes "true";' | tee /etc/apt/apt.conf.d/99assume-yes \
      && sed -Ei 's|^(DPkg::Pre-Install-Pkgs .*)|#\1|g' /etc/apt/apt.conf.d/70debconf \
      && debconf-show debconf

# Install Packages
RUN set -x \
      && mv /etc/apt/apt.conf.d/70debconf . \
      && ${APT} update \
      && ${APT} install apt-utils >/dev/null \
      && mv 70debconf /etc/apt/apt.conf.d \
      && ${APT} upgrade >/dev/null \
      && ${APT} install --no-install-recommends git wget curl autoconf libtool make automake autoconf g++ >/dev/null \
      && ${APT} install --no-install-recommends build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev libvips-tools >/dev/null

ENV TZ=${TIMEZONE}
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
      && echo $TZ > /etc/timezone

RUN export GIT_SSL_NO_VERIFY=1 \
    && git config --global http.sslVerify false

RUN npm config set unsafe-perm true
RUN npm i -g npm --prefix /usr/local
RUN curl -sf https://gobinaries.com/tj/node-prune | sh
RUN yarn global add rimraf@latest --prefix /usr/local

RUN npm cache clean --force \
      && apt-get clean \
      && apt-get -y --purge autoremove \
      && rm -rf /usr/share/doc /usr/share/man /var/lib/apt/lists/* /root/* /tmp/* /var/tmp/*

WORKDIR /app

# default command
CMD [ "node" ]
